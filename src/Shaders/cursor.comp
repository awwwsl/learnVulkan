#version 460
#pragma shader_stage(compute)

layout(set = 0, binding = 0, rgba32f) uniform image2D i_Image;
layout(set = 0, binding = 1) uniform sampler2D i_Mask;

layout(push_constant) uniform PushConstants {
  uvec2 imageExtent; // (Original)
  uvec2 maskExtent;  // (Multiplied)
  uint maskScale;    // (Multiplier)
} pc;

void main() {
  uvec2 maskExtentCoord = gl_GlobalInvocationID.xy;
  vec2 maskCoord = vec2(maskExtentCoord) / vec2(pc.maskExtent);

  vec4 maskColor = texture(i_Mask, maskCoord);
  if (maskColor.a < 0.5) {
    return;
  }

  uvec2 imageCenter = pc.imageExtent / 2;
  uvec2 maskCenter = pc.maskExtent / 2;

  uvec2 imageCoord = imageCenter + (maskExtentCoord - maskCenter);

  vec4 imageColor = imageLoad(i_Image, ivec2(imageCoord)); // HACK: unsafe conversion

  imageStore(i_Image, ivec2(imageCoord), vec4(vec3(1.0f) - imageColor.rgb, imageColor.a)); // unsafe as well
}
